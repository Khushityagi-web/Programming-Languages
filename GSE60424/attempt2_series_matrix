import gzip
import shutil
with gzip.open("GSE60424_data/GSE60424_GEOSubmit_FC1to11_normalized_counts.txt.gz", 'rb') as f_in:
    with open("GSE60424_data/GSE60424_normalized_counts.txt", 'wb') as f_out:
        shutil.copyfileobj(f_in, f_out)

print("File extracted successfully.")
import pandas as pd
df = pd.read_csv("GSE60424_data/GSE60424_normalized_counts.txt", sep="\t", index_col=0)
print(df.shape)
df.head()
df.to_csv("GSE60424_data/GSE60424_normalized_counts.csv")

R code
library(DESeq2)
library(pheatmap)
library(ggplot2)
library(reshape2)
library(matrixStats)
# Load counts
counts <- read.csv("GSE60424_normalized_counts.csv", row.names = 1, check.names = FALSE)
# Create temporary metadata
sample_info <- data.frame(
  row.names = colnames(counts),
  condition = rep(c("Naive", "Effector", "Memory", "Temra"), length.out = ncol(counts))  # Replace later with actual grouping
)
dds <- DESeqDataSetFromMatrix(countData = round(counts),
                              colData = sample_info,
                              design = ~ condition)

vsd <- vst(dds, blind = TRUE)
vsd_mat <- assay(vsd)
# Sample 5000 genes to avoid overcrowding
> set.seed(123)
> vsd_sampled <- vsd_mat[sample(nrow(vsd_mat), 5000), ]
> vsd_melt <- melt(as.data.frame(vsd_sampled), variable.name = "Sample", value.name = "VST")
vsd_df <- as.data.frame(vsd_sampled)
vsd_df$Gene <- rownames(vsd_df)  # Add gene names as a column

# Melt with "Gene" as ID variable
vsd_melt <- melt(vsd_df, id.vars = "Gene", variable.name = "Sample", value.name = "VST")
ggplot(vsd_melt, aes(x = Sample, y = VST)) +
  geom_boxplot(outlier.size = 0.3, fill = "lightblue") +
  theme(axis.text.x = element_text(angle = 90, size = 5)) +
  labs(title = "Boxplot of VST-normalized Expression (Sampled Genes)",
       x = "Sample", y = "VST Counts")
plotPCA(vsd, intgroup = "condition")
topVarGenes <- head(order(rowVars(vsd_mat), decreasing = TRUE), 100)

pheatmap(vsd_mat[topVarGenes, ],
         show_rownames = FALSE,
         annotation_col = as.data.frame(colData(vsd)),
         main = "Top 100 Variable Genes Heatmap")



