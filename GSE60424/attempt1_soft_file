import GEOparse

# Download and parse the GSE60424 dataset
gse = GEOparse.get_GEO("GSE60424", destdir="GSE60424_data")

# This will save the raw .soft file and parse it
print("Download complete. Dataset title:", gse.metadata['title'][0])
import GEOparse

gse = GEOparse.get_GEO(filepath="GSE60424_data/GSE60424_family.soft.gz")
print("Parsed GSE title:", gse.metadata['title'][0])
import pandas as pd
import GEOparse
import pandas as pd
# Load from soft.gz
gse = GEOparse.get_GEO(filepath="GSE60424_data/GSE60424_family.soft.gz")
# Initialize dictionary to store gene expression per sample
data = {}
# Loop through each sample
for gsm_name, gsm in gse.gsms.items():
    df = gsm.table
    if "ID_REF" in df.columns and "VALUE" in df.columns:
        data[gsm_name] = df.set_index("ID_REF")["VALUE"]
    else:
        print(f"Skipping {gsm_name} - missing required columns.")
# Convert dictionary to dataframe (genes x samples)
expression_df = pd.DataFrame(data)
# Save to CSV
expression_df.to_csv("expression_matrix_raw.csv")
print("Saved final matrix with shape:", expression_df.shape)
for gsm_name, gsm in gse.gsms.items():
    print(f"\nSample: {gsm_name}")
    print(gsm.table.columns)
    print(gsm.table.head())
    break  # remove this line if you want to print all samples
